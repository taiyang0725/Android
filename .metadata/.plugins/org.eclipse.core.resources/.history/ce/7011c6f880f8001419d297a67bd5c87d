package com.anxiong.fragment;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.anxiong.adapter.MyAdapter;
import com.anxiong.viewpageIndicator.IconPageIndicator;
import com.anxiong.viewpageIndicator.PageIndicator;
import com.example.testviewpage.R;

public class MainFragment extends Fragment  {

	private View view;

	private ViewPager pager;
	private List<Fragment> list;
	private MyAdapter adapter;
	private PageIndicator mIndicator;

	private int[] icon = new int[]{ R.drawable.we_chat, R.drawable.friend,
			R.drawable.find, R.drawable.me };

	@Override
	public void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);

	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.activity_base, null);
		init();
		return view;

	}

	private void init() {

		list = new ArrayList<Fragment>();
		list.add(new AFragment());
		list.add(new BFragment());
		list.add(new CFragment());
		list.add(new DFragment());

		pager = (ViewPager) view.findViewById(R.id.viewPage);
//		pager.setOnPageChangeListener(this);

		adapter = new MyAdapter(getChildFragmentManager(), list,icon);
		pager.setAdapter(adapter);

		mIndicator = (IconPageIndicator) view.findViewById(R.id.indicator);
		mIndicator.setViewPager(pager);

	};
/*
	@Override
	public void onPageScrollStateChanged(int arg0) {
		// TODO Auto-generated method stub
		Tools.showHint(getActivity(), "onPageScrollStateChanged：" + arg0);

	}

	@Override
	public void onPageScrolled(int arg0, float arg1, int arg2) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onPageSelected(int arg0) {
		pager.setCurrentItem(arg0);
		Tools.showHint(getActivity(), " onPageSelected：" + arg0);

	}
*/
	@Override
	public void onDetach() {
		super.onDetach();
		// 当fragment销毁时通过反射控制mChildFragmentManager也重置
		try {
			Field childFragmentManager = Fragment.class
					.getDeclaredField("mChildFragmentManager");
			childFragmentManager.setAccessible(true);
			childFragmentManager.set(this, null);

		} catch (NoSuchFieldException e) {
			throw new RuntimeException(e);
		} catch (IllegalAccessException e) {
			throw new RuntimeException(e);
		}

	}

}
